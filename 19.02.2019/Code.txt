https://meet.google.com/ixm-ccok-ixn



        private void FontSizeChange(object sender, EventArgs e)
        {
            // нахожу размер = текущий размер + значение Tag в пункте ContextMenu
            int size = Convert.ToInt32(SizeToolStripComboBox.Text) + Convert.ToInt32(((ToolStripMenuItem)sender).Tag);

            if (size < 4 || size > 28) // проверка выхода за границы
                size = 14;

            SizeToolStripComboBox.Text = size.ToString(); // меняю размер

            FontFamilyToolStripComboBox_SelectedIndexChanged(sender, e);
        }

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 public Form1()
        {
            InitializeComponent();

	//	...
            
            ClockToolStripStatusLabel.Text = DateTime.Now.ToLongTimeString(); // время
            checkedDropDownButton = TimeToolStripMenuItem;
            checkedDropDownButton.Checked = true; // отмечена кнопка - время

        }

    enum DateTimeFormat { ShowClock, ShowDay } // формат отображения даты

        DateTimeFormat dtFormat = DateTimeFormat.ShowClock; // время

        ToolStripMenuItem checkedDropDownButton; // текущая нажатая кнопка

        private void StatusTimer_Tick(object sender, EventArgs e)
        {
            string info = "";
            switch (dtFormat)
            {
                case DateTimeFormat.ShowClock:
                    info = DateTime.Now.ToLongTimeString();
                    break;
                case DateTimeFormat.ShowDay:
                    info = DateTime.Now.ToLongDateString();
                    break;
            }
            ClockToolStripStatusLabel.Text = info;
        }

        private void DateToolStripMenuItem_Click(object sender, EventArgs e)
        {
            // установка отметки для кнопки и даты для панели
            checkedDropDownButton.Checked = false;
            dtFormat = DateTimeFormat.ShowDay;
            checkedDropDownButton = DateToolStripMenuItem;
            checkedDropDownButton.Checked = true;
        }

        private void TimeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            // установка отметки для кнопки и времени для панели
            checkedDropDownButton.Checked = false;
            dtFormat = DateTimeFormat.ShowClock;
            checkedDropDownButton = TimeToolStripMenuItem;
            checkedDropDownButton.Checked = true;
        }

 // ------------------------------------------------------------------------
        
        float currFontSize = 12f;
        const int MinFontSize = 4;
        const int MaxFontSize = 30;

        private void PlusToolStripSplitButton_Click(object sender, EventArgs e)
        {

            // увеличение шрифта
            currFontSize += 2;
            if (currFontSize > MaxFontSize)
                currFontSize = 12;

            // изменяю размер - шрифт тот же
            lblTest.Font = new Font(lblTest.Font.FontFamily, currFontSize);

            Text = $"Выбранный размер шрифта: {currFontSize}";
        }

        private void MinusToolStripSplitButton_Click(object sender, EventArgs e)
        {
            // уменьшение шрифта
            currFontSize -= 2;
            if (currFontSize < MinFontSize)
                currFontSize = 12;

            // изменяю размер - шрифт тот же
            lblTest.Font = new Font(lblTest.Font.FontFamily, currFontSize);

            Text = $"Выбранный размер шрифта: {currFontSize}";
        }

// -------------------------------------------------------------------------

        private void btnProgress_Click(object sender, EventArgs e)
        {
            btnProgress.Enabled = false;
           
            for (int i = 0; i < toolStripProgressBar.Maximum; i++)
            {
                toolStripProgressBar.Value = i;
                //toolStripProgressBar.Increment(1);
                //toolStripProgressBar.PerformStep(); // свойство Step = 1
                System.Threading.Thread.Sleep(100);
            }
            toolStripProgressBar.Value = 0;
            btnProgress.Enabled = true;
        }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        private void Form1_Load(object sender, EventArgs e)
        {
            // Создаем и инициализируем генератор случайных чисел
            // текущим значением секунд в диапазоне от 0 до 59
            Random rand = new Random(DateTime.Now.Second);
            //Random rand = new Random();

            // Создаем btnCount кнопок случайных размеров
            const int btnCount = 10;
            for (int i = 0; i < btnCount; i++)
            {
                Button btn = new Button();// Создали кнопку
                btn.Parent = flowLayoutPanel;// Привязали к панели
                btn.Text = "Кнопка " + Convert.ToString(i + 1);// Подписали
                btn.AutoSize = true;// Подстроили под текст
                // Регистрируем общий с компоновочной панелью обработчик кнопок
                btn.Click += elementClick;
                // Создаем структуру и инициализируем начальным размером
                Size btnSize = btn.PreferredSize;// Предпочтительный размер
                // Корректируем структуру случайным образом в сторону увеличения
                //btnSize.Width += rand.Next(5, 100);
                //btn.Height += rand.Next(10, 100);
                btnSize.Width = (int)(btnSize.Width * (1 + 2 * rand.NextDouble()));
                btnSize.Height = (int)(btnSize.Height * (1 + 2 * rand.NextDouble()));
                // Задаем размер кнопки
                btn.Size = btnSize;
                // Маркируем
                btn.Name = "btn" + (i + 1);
                // Центрируем построчно
                btn.Anchor = AnchorStyles.None;
            }
        }

        // Общий обработчик для кнопок и панели
        void elementClick(object sender, EventArgs e)
        {
            // показ готовой формы
            Form2 f2 = new Form2(sender);
            f2.ShowDialog();            
        }